* {
    box-sizing: border-box;
}

:root {
    --bg: #f8fafc;
    --text: #0f172a;
    --muted: #475569;
    --panel: #ffffff;
    --border: #e2e8f0;
    --accent: #2563eb;
    --accent-600: #1d4ed8;
    --gap: 1rem;
}

html,
body {
    margin: 0;
    background: var(--bg);
    color: var(--text);
    font: 16px/1.5 system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
}

.container {
    max-width: 1100px;
    margin: 0 auto;
    padding: 1rem;
}

/* Header */
.site-header {
    border-bottom: 1px solid var(--border);
    background: var(--panel);
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
}

.brand-link {
    text-decoration: none;
    color: var(--text);
    font-weight: 700;
}

.top-nav {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
}

.nav-link {
    color: var(--muted);
    text-decoration: none;
    padding: 0.25rem 0.5rem;
}

.nav-link:hover,
.nav-link:focus {
    color: var(--text);
}

/* Hero */
.hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: 0.75rem;
    padding: 3rem 1rem;
}

.hero .lead {
    color: var(--muted);
    max-width: 60ch;
    margin: 0.5rem auto 1rem;
}

.hero-actions {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    flex-wrap: wrap;
}

.btn {
    border: 1px solid var(--border);
    background: #fff;
    color: var(--text);
    border-radius: 8px;
    padding: 0.6rem 1rem;
    cursor: pointer;
}

.btn.primary {
    background: var(--accent);
    border-color: var(--accent);
    color: #fff;
}

.btn.primary:hover {
    background: var(--accent-600);
    border-color: var(--accent-600);
}

.btn.small {
    padding: 0.4rem 0.75rem;
    font-size: 0.9rem;
}

/* Album grid */
.album {
    padding-top: 1rem;
    padding-bottom: 3rem;
}

.cards {
    display: flex;
    flex-wrap: wrap;
    gap: var(--gap);
}

.card {
    background: var(--panel);
    border: 1px solid var(--border);
    border-radius: 12px;
    overflow: hidden;
    display: flex;
    /* column layout for card content */
    flex-direction: column;
    /* 3 columns on wide screens, shrink nicely */
    flex: 1 1 320px;
    max-width: calc((100% - var(--gap) * 2) / 3);
}

.thumb {
    background: #cbd5e1;
    height: 180px;
    /* placeholder height */
}

.card-body {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    padding: 1rem;
}

.card-actions {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    margin-top: auto; /* push actions to bottom */
}

.meta {
    color: var(--muted);
    margin-left: auto;
}

/* Footer */
.site-footer {
    border-top: 1px solid var(--border);
    text-align: center;
    color: var(--muted);
    padding: 2rem 1rem 3rem;
}

.back-to-top {
    color: var(--accent);
    text-decoration: none;
}


/* Reflection

1 – Which sections of the layout felt like a natural fit for Flexbox?  

2 – Which sections were workable with Flexbox, but felt a bit limited or could be improved? */

/* --- Flexbox responsive tweaks --- */
@media (max-width: 900px) {
  .card { max-width: calc((100% - var(--gap)) / 2); }
}

@media (max-width: 600px) {
  .card { max-width: 100%; }
}

/* Reflection (Aarif Salem Alharthi — ID: 200587918)
1 – Natural fit for Flexbox: the header (brand left, nav right with wrapping), the hero (vertical stack centered), 
    the action buttons row, and each card's internal layout (thumb on top, actions pinned to bottom using margin-top:auto).
2 – Workable but a bit limited: the multi‑row card grid. Flex‑wrap makes it simple, but controlling precise column counts 
    and row alignment is less explicit than CSS Grid. For example, making perfectly aligned rows of equal heights or spanning 
    items would be easier with Grid, but Flexbox still meets the lab requirements cleanly.
*/
